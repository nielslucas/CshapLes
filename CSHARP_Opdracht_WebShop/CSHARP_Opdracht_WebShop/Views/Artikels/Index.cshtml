@model IEnumerable<CSHARP_Opdracht_WebShop.Models.Artikels>

@{
    ViewBag.Title = "Articles";
}


<h2>Index</h2>
<link href="@Url.Content("~/Content/Toast.css")" rel="stylesheet" type="text/css" />
<div class="dropdown">
  <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">Category
  <span class="caret"></span></button>
  <ul id="categoryDropDown" class="dropdown-menu">
    @if (ViewBag.Categories != null)
    {
        <li><a href="#" onclick="ArtikelsByCategory('All')">No filter</a></li>

        for (var i = 0; i < (Enumerable.Count(ViewBag.Categories)); i++)
        {
            <li><a href="#" onclick="ArtikelsByCategory('@ViewBag.Categories[i].Name')"> @ViewBag.Categories[i].Name</a></li>
        }
    }
      
      
  </ul>
</div>

<br />

<p><a href="/Artikels/ShoppingCart">Shoppingcart</a></p>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
<table id="Artikels" class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th onclick="ArtikelsOrderbyPrice();">
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Storage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Categories)
        </th>
        <th>
            <!-- space -->
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Storage)
        </td>
        <td>
            @{
                string category = "";
            }

            @foreach (var cat in item.Categories)
            {
                if (item.Categories.Count > 1)
                {
                    category = category + cat.Name + ", ";
                }
                else
                {
                    category = cat.Name;
                }
            }
            
            @if(item.Categories.Count > 1)
            {
                category = category.Remove(category.Length - 2);
            }
           

            @Html.DisplayFor(modelItem => category)

        </td>
        <td>
            <!-- space -->
        </td>
        <td>
            @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.ID }) |*@
            <a href="#" onclick="ArtikelsOrderTemp('@item.ID')">Order</a>
        </td>
    </tr>
}

</table>

<div id="snackbar"></div>

<div id="bikes"></div>

@*<button onclick="ArtikelsOrderTemp('1');">Click ME</button>*@

@section Scripts {
<script type="text/javascript">

    var domain = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');

    function ArtikelsOrderTemp(id) {
        $.ajax({
            url: domain+'/api/ArtikelsOrderTemp',
            type: 'POST',
            data: { id: id },
            success: function (data) {
                showToast(data.Name);
            }
        })
    }

    function showToast(itemName) {
        $('#text').remove();

        var x = document.getElementById("snackbar")

        var text = $('<p id=text> The item "' + itemName + '" is added to shopping cart</p>');
        $('#snackbar').append(text);

        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
    }

    function ArtikelsOrderbyPrice() {
        $.ajax({
            url: domain+'/api/ArtikelsOrderByPrice',
            type: 'POST',
            success: function (data) {
                $("#Artikels").html('<tr> <th> @Html.DisplayNameFor(model => model.Name) </th><th> @Html.DisplayNameFor(model => model.Description) </th> <th onclick="ArtikelsOrderbyPrice();"> @Html.DisplayNameFor(model => model.Price)</th><th>@Html.DisplayNameFor(model => model.Storage)</th><th>@Html.DisplayNameFor(model => model.Categories)</th><th></th><th></th></tr>');

                for (var i = 0; i < data.length; i++) {

                    var price = toEuro(data[i].Price);

                    var bikeDiv = $('<tr>');
                    bikeDiv.html('<td>' + data[i].Name);
                    bikeDiv.append('<td>' + data[i].Description);
                    bikeDiv.append('<td>' + price);
                    bikeDiv.append('<td>' + data[i].Storage);

                    var categoryDiv = $('<td>')

                    for (var e = 0; e < data[i].Categories.length; e++) {

                        categoryDiv.append(data[i].Categories[e].Name);

                        if (data[i].Categories.length > 1 && e < (data[i].Categories.length - 1)) {
                            categoryDiv.append(", ");
                        }
                    }
                    bikeDiv.append(categoryDiv);

                    bikeDiv.append("<td><a href=# onclick=ArtikelsOrderTemp('" + data[i].ID + "')>Order</button></td>");

                    $('#Artikels').append(bikeDiv);
                }

                $("#bikes").show('slow');
            }
        })
    }

    function ArtikelsByCategory(category) {
        $.ajax({
            url: domain+'/api/ArtikelsByCategory',
            type: 'POST',
            data: { name: category },
            success: function (data) {
                $("#Artikels").html('<tr> <th> @Html.DisplayNameFor(model => model.Name) </th><th> @Html.DisplayNameFor(model => model.Description) </th> <th onclick="ArtikelsOrderbyPrice();"> @Html.DisplayNameFor(model => model.Price)</th><th>@Html.DisplayNameFor(model => model.Storage)</th><th>@Html.DisplayNameFor(model => model.Categories)</th><th></th><th></th></tr>');



                for (var i = 0; i < data.length; i++) {

                    var price = data[i].Price;

                    price = toEuro(price);

                    var bikeDiv = $('<tr>');
                    bikeDiv.html('<td>' + data[i].Name);
                    bikeDiv.append('<td>' + data[i].Description);
                    bikeDiv.append('<td>' + price);
                    bikeDiv.append('<td>' + data[i].Storage);
                    //$.each(data[i].categor)
                    var categoryDiv = $('<td>')

                    for (var e = 0; e < data[i].Categories.length; e++) {

                        categoryDiv.append(data[i].Categories[e].Name);

                        if (data[i].Categories.length > 1 && e < (data[i].Categories.length - 1)) {
                            categoryDiv.append(", ");
                        }
                    }
                    bikeDiv.append(categoryDiv);

                    bikeDiv.append("<td><a href=# onclick=ArtikelsOrderTemp('"+data[i].ID +"')>Order</button></td>");


                    $('#Artikels').append(bikeDiv);
                }

                $("#bikes").show('slow');
            }
        })
    }

    function toEuro(priceWeGet) {
        // This function is make because ajax call does not return the value from the database
        // It will return the value where , with a . and it removes every 0 behind the .
        // This function will fix this for us.

        var price = String(priceWeGet); // Not sure but make sure we will handle it as a string, normal functions wont work if we dont do this

        if (price.indexOf(".") != "-1") { // Check contains the .

            price = price.replace(".", ",") // If so then replace the . with a ,

            var split = price.split(','); // Split the string for every , (even tho there is only 1)

            if (split[1].length == 1) { // If the amount of ints after the , is only 1 then add a 0
                price = price + 0;
            }

        }
        else { // If price has no . in it, just add ,00
            price = price + ',00';
        }

        return price;
    }

    //$(function () {
    //    //FillCategoryDropDown();
    //});

</script>
}



